lengte <- nchar(a)
}
lengte <- unique(lengte)
lengte
barcodes <- unique(raw_data[, "Barcodesequence"])
lengte <- NULL
for(a in barcodes){
# print(a)
# print(nchar(a))
lengte <- nchar(a)
}
lengte <- unique(lengte)
lengte
barcodes <- unique(raw_data[, "Barcodesequence"])
lengte <- list()
for(a in barcodes){
# print(a)
# print(nchar(a))
lengte <- nchar(a)
}
lengtes <- unique(lengte)
lengte
lengtes
runApp('Documents/TAQC')
runApp('Documents/TAQC')
runApp('Documents/TAQC')
runApp('Documents/TAQC')
runApp('Documents/TAQC')
runApp('Documents/TAQC')
runApp('Documents/TAQC')
runApp('Documents/TAQC')
runApp('Documents/TAQC')
runApp('Documents/TAQC')
projects
projects<- sort(unique(raw_data[,"Project"]))
projects
typeof(projects)
str(projects)
class(projects)
project<- sort(unique(raw_data[,"Project"]))
projects <- factor(project, levels = c(levels(project), "All"))
projects
project<- unique(raw_data[,"Project"])
projects <- sort(factor(project, levels = c(levels(project), "All")))
projects
runApp('Documents/TAQC')
projects<- unique(raw_data[,"Project"])
projects <- sort(union(projects, c("All")))
projects
runApp('Documents/TAQC')
runApp('Documents/TAQC')
runApp('Documents/TAQC')
runApp('Documents/TAQC')
runApp('Documents/TAQC')
runApp('Documents/TAQC')
View(raw_data)
shiny::runApp('Documents/TAQC')
raw_data=read.table('/home/cog/aluesink/Documents/TAQC/Raw_data.txt',header=TRUE)
runApp('Documents/TAQC')
runApp('Documents/TAQC')
raw_data=read.table('/home/cog/aluesink/Documents/TAQC/Raw_data.txt',header=TRUE)
raw_data$RunQ30 <- NULL
# Add Q30 per run to dataframe
Q30_data <- data.frame()
for (a in unique(raw_data[,"Run"])){
Q30 <-raw_data[raw_data[,"Run"]==a,"X..gt..Q30_bases"]
PFcluster <- raw_data[raw_data[,"Run"]==a,"PFClusters"]
Q30_PF<- Q30*PFcluster
Q30_avr<-sum(Q30_PF)/sum(PFcluster)
raw_data$RunQ30[raw_data[,"Run"]==a] <- Q30_avr
}
# Add date to dataframe
raw_data$Date <- NULL
raw_data$asDate <- NULL
for (i in 1:nrow(raw_data)) {
raw_data$Date[i] <- unlist(strsplit(as.character(raw_data$Run[i]),"_"))[1]
raw_data$asDate[i] <- as.Date(raw_data$Date[i],"%y%m%d",origin="00-00-00")
raw_data$Date[i] <- format.Date(as.Date(raw_data$Date[i],"%y%m%d"), "%d/%m/%Y")
}
projects <- unique(raw_data[,"Project"])
raw_data <- raw_data[order(raw_data$asDate),]
cbPalette <- c("#999999", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
runApp('Documents/TAQC')
runApp('Documents/TAQC')
runApp('Documents/TAQC')
shiny::runApp('Documents/oefen_TAQC')
run_table = read.table("/home/cog/aluesink/Documents/oefen_TAQC/run_table.txt", header = TRUE)
sample_lane_table = read.table("/home/cog/aluesink/Documents/oefen_TAQC/sample_lane_table1.txt", header = TRUE)
runApp('Documents/oefen_TAQC')
View(sample_lane_table)
View(sample_lane_table)
shiny::runApp('Documents/oefen_TAQC')
shiny::runApp('Documents/TAQC')
run_table = read.table("/home/cog/aluesink/Documents/TAQC/run_table.txt", header = TRUE)
sample_lane_table = read.table("/home/cog/aluesink/Documents/TAQC/sample_lane_table.txt", header = TRUE)
processed_table = read.table("/home/cog/aluesink/Documents/TAQC/processed_sample.txt", header = TRUE)
View(processed_table)
runApp('Documents/TAQC')
View(processed_table)
runApp('Documents/TAQC')
View(run_table)
runApp('Documents/TAQC')
run_table$RunQ30 <- NULL
for (a in unique(sample_lane_table[,"Run"])){
Q30 <- sample_lane_table[sample_lane_table[,"Run"]==a, "X._._Q30_bases"]
PFCluster <- sample_lane_table[sample_lane_table[,"Run"]==a, "PF_Clusters"]
Q30_PF <-Q30*PFCluster
Q30_avr <- sum(Q30_PF)/sum(PFCluster)
run_table$RunQ30[run_table[,"Run"]==a] <- Q30_avr
}
run_table$Date <- NULL
run_table$asDate <- NULL
for (i in 1:nrow(run_table)){
run_table$Date[i] <- unlist(strsplit(as.character(run_table$Run[i]),"_"))[1]
run_table$asDate[i] <- as.Date(run_table$Date[i], "%y%m%d", origin="00-00-00")
run_table$Date[i] <- format.Date(as.Date(run_table$Date[i], "%y%m%d"), "%d/%m/%Y")
}
processed_table$Date <- NULL
processed_table$asDate <- NULL
for(i in 1:nrow(processed_table)){
processed_table$Date[i] <- unlist(strsplit(as.character(processed_table$Run[i]),"_"))[1]
processed_table$asDate[i] <- as.Date(processed_table$Date[i], "%y%m%d", origin="00-00-00")
processed_table$Date[i] <- format.Date(as.Date(processed_table$Date[i], "%y%m%d"), "%d/%m/%Y")
}
sample_lane_table$len_barcode <- NULL
for(i in unique(sample_lane_table[, "Barcode_sequence"])){
sample_lane_table$len_barcode[sample_lane_table[, "Barcode_sequence"]==i] <- nchar(i)
}
projects <- unique(sample_lane_table[,"Project"])
run_table <- run_table[order(run_table$asDate), ]
View(processed_table)
processed_table <- processed_table[order(processed_table$asDate), ]
View(processed_table)
runApp('Documents/TAQC')
runApp('Documents/TAQC')
runApp('Documents/TAQC')
runApp('Documents/TAQC')
runApp('Documents/TAQC')
runApp('Documents/TAQC')
runApp('Documents/TAQC')
runApp('Documents/TAQC')
runApp('Documents/TAQC')
runApp('Documents/TAQC')
runApp('Documents/TAQC')
runApp('Documents/TAQC')
runApp('Documents/TAQC')
runApp('Documents/TAQC')
runApp('Documents/TAQC')
runApp('Documents/TAQC')
runApp('Documents/TAQC')
runApp('Documents/TAQC')
runApp('Documents/TAQC')
View(run_table)
processed_table$Date <- NULL
processed_table$asDate <- NULL
processed_table$Sequencer <- NULL
for(i in 1:nrow(processed_table)){
processed_table$Date[i] <- unlist(strsplit(as.character(processed_table$Run[i]),"_"))[1]
processed_table$asDate[i] <- as.Date(processed_table$Date[i], "%y%m%d", origin="00-00-00")
processed_table$Date[i] <- format.Date(as.Date(processed_table$Date[i], "%y%m%d"), "%d/%m/%Y")
grepl("D00267",processed_table$Run[i]) = TRUE:
processed_table$Sequencer[i] <- "hiseq_umc01"
grepl("NB501012", processed_table$Run[i]) = TRUE:
processed_table$Sequencer[i] <- "nextseq_umc01"
grepl("NB501039", processed_table$Run[i]) = TRUE:
processed_table$Sequencer[i] <- "nextseq_umc02"
}
processed_table$Date <- NULL
processed_table$asDate <- NULL
processed_table$Sequencer <- NULL
hiseq <- "hiseq_umc01"
nextseq1 <- "nextseq_umc01"
nextseq2 <- "nextseq_umc02"
for(i in 1:nrow(processed_table)){
processed_table$Date[i] <- unlist(strsplit(as.character(processed_table$Run[i]),"_"))[1]
processed_table$asDate[i] <- as.Date(processed_table$Date[i], "%y%m%d", origin="00-00-00")
processed_table$Date[i] <- format.Date(as.Date(processed_table$Date[i], "%y%m%d"), "%d/%m/%Y")
grepl("D00267",processed_table$Run[i]) = TRUE:
processed_table$Sequencer[i] <- hiseq
grepl("NB501012", processed_table$Run[i]) = TRUE:
processed_table$Sequencer[i] <- nextseq1
grepl("NB501039", processed_table$Run[i]) = TRUE:
processed_table$Sequencer[i] <- nextseq2
}
processed_table$Sequencer <- NA
View(processed_table)
processed_table$Sequencer <- NA
hiseq <- "hiseq_umc01"
nextseq1 <- "nextseq_umc01"
nextseq2 <- "nextseq_umc02"
for(i in 1:nrow(processed_table)){
processed_table$Date[i] <- unlist(strsplit(as.character(processed_table$Run[i]),"_"))[1]
processed_table$asDate[i] <- as.Date(processed_table$Date[i], "%y%m%d", origin="00-00-00")
processed_table$Date[i] <- format.Date(as.Date(processed_table$Date[i], "%y%m%d"), "%d/%m/%Y")
grepl("D00267",processed_table$Run[i]) = TRUE:
processed_table$Sequencer[i] <- hiseq
grepl("NB501012", processed_table$Run[i]) = TRUE:
processed_table$Sequencer[i] <- nextseq1
grepl("NB501039", processed_table$Run[i]) = TRUE:
processed_table$Sequencer[i] <- nextseq2
}
runApp('Documents/TAQC')
runApp('Documents/TAQC')
runApp('Documents/TAQC')
runApp('Documents/TAQC')
processed_table$Date <- NULL
processed_table$asDate <- NULL
processed_table$Sequencer <- NA
hiseq <- c("hiseq_umc01")
nextseq1 <- c("nextseq_umc01")
nextseq2 <- c("nextseq_umc02")
for(i in 1:nrow(processed_table)){
processed_table$Date[i] <- unlist(strsplit(as.character(processed_table$Run[i]),"_"))[1]
processed_table$asDate[i] <- as.Date(processed_table$Date[i], "%y%m%d", origin="00-00-00")
processed_table$Date[i] <- format.Date(as.Date(processed_table$Date[i], "%y%m%d"), "%d/%m/%Y")
if(grepl("D00267",processed_table$Run[i]) == TRUE){
processed_table$Sequencer[i] <- hiseq
}
else if(grepl("NB501012", processed_table$Run[i]) == TRUE){
processed_table$Sequencer[i] <- nextseq1
}
else if(grepl("NB501039", processed_table$Run[i]) == TRUE){
processed_table$Sequencer[i] <- nextseq2
}
}
View(processed_table)
runApp('Documents/TAQC')
library(shiny)
library(ggplot2)
run_table = read.table("/home/cog/aluesink/Documents/TAQC/run_table.txt", header = TRUE)
sample_lane_table = read.table("/home/cog/aluesink/Documents/TAQC/sample_lane_table.txt", header = TRUE)
processed_table = read.table("/home/cog/aluesink/Documents/TAQC/processed_sample.txt", header = TRUE)
# run_table["Run"]==sample_lane_table["Run"]
run_table$RunQ30 <- NULL
for (a in unique(sample_lane_table[,"Run"])){
Q30 <- sample_lane_table[sample_lane_table[,"Run"]==a, "X._._Q30_bases"]
PFCluster <- sample_lane_table[sample_lane_table[,"Run"]==a, "PF_Clusters"]
Q30_PF <-Q30*PFCluster
Q30_avr <- sum(Q30_PF)/sum(PFCluster)
run_table$RunQ30[run_table[,"Run"]==a] <- Q30_avr
}
run_table$Date <- NULL
run_table$asDate <- NULL
for (i in 1:nrow(run_table)){
run_table$Date[i] <- unlist(strsplit(as.character(run_table$Run[i]),"_"))[1]
run_table$asDate[i] <- as.Date(run_table$Date[i], "%y%m%d", origin="00-00-00")
run_table$Date[i] <- format.Date(as.Date(run_table$Date[i], "%y%m%d"), "%d/%m/%Y")
}
processed_table$Date <- NULL
processed_table$asDate <- NULL
processed_table$Sequencer <- NA
hiseq <- c("hiseq_umc01")
nextseq1 <- c("nextseq_umc01")
nextseq2 <- c("nextseq_umc02")
for(i in 1:nrow(processed_table)){
processed_table$Date[i] <- unlist(strsplit(as.character(processed_table$Run[i]),"_"))[1]
processed_table$asDate[i] <- as.Date(processed_table$Date[i], "%y%m%d", origin="00-00-00")
processed_table$Date[i] <- format.Date(as.Date(processed_table$Date[i], "%y%m%d"), "%d/%m/%Y")
if(grepl("D00267",processed_table$Run[i]) == TRUE){
processed_table$Sequencer[i] <- hiseq
}
else if(grepl("NB501012", processed_table$Run[i]) == TRUE){
processed_table$Sequencer[i] <- nextseq1
}
else if(grepl("NB501039", processed_table$Run[i]) == TRUE){
processed_table$Sequencer[i] <- nextseq2
}
}
sample_lane_table$len_barcode <- NULL
for(i in unique(sample_lane_table[, "Barcode_sequence"])){
sample_lane_table$len_barcode[sample_lane_table[, "Barcode_sequence"]==i] <- nchar(i)
}
projects <- unique(sample_lane_table[,"Project"])
run_table <- run_table[order(run_table$asDate), ]
processed_table <- processed_table[order(processed_table$asDate), ]
ranges1 <- reactiveValues(x = NULL, y = NULL)
ranges2 <- reactiveValues(x = NULL, y = NULL)
ranges3 <- reactiveValues(x = NULL, y = NULL)
function(input, output, session) {
output$Run_Q30 <- renderPlot({
# runs <- run_table[(as.Date())]
sub_data <- sample_lane_table[(as.Date(run_table$Date, "%d/%m/%Y") >= as.Date(input$sliderData[1], "%d/%m/%Y")) & (as.Date(run_table$Date, "%d/%m/%Y") <= as.Date(input$sliderData[2], "%d/%m/%Y")), ]
sub_data <- subset(sub_data, Sequencer %in% input$sequencer)
grouper = "Run"
ycol <- "X._._Q30_bases"
ggplot(sub_data, aes_string(x="Run", y=ycol, group=grouper)) + geom_point(shape=1, aes(colour=Sequencer)) + geom_hline(yintercept=80, colour="red", size=1, lty=2) + stat_summary(fun.y="median", colour="black", size=3, geom="point") + geom_smooth(aes(group=Sequencer, colour=Sequencer), method="lm") + ggtitle("Percentage based \u2265 Q30") + labs(y = "% \u2265 Q30") + theme(axis.text.x=element_text(angle=60, hjust=1, vjust=1), plot.title = element_text(lineheight=.8, face="bold",size = 30), legend.title = element_text(size=20, face="bold"), legend.text = element_text(size=18)) + coord_cartesian(xlim = ranges1$x, ylim = ranges1$y, expand = FALSE)
})
output$Project_PFC <- renderPlot({
grouper="Project"
ycol <- "X._PF_Clusters"
ggplot(sample_lane_table, aes_string(x="Project", y = ycol, group=grouper)) + geom_boxplot() + theme(axis.text.x=element_text(angle=60, hjust=1, vjust=1), plot.title = element_text(lineheight=.8, face="bold",size = 30), legend.title = element_text(size=20, face="bold")) + ggtitle("% PF Cluster per Project") + scale_y_continuous(name="% PF Clusters", breaks = seq(0,100,10), limits = c(0,100))
})
output$Barcode_OMB <- renderPlot({
sub_data <- subset(sample_lane_table, len_barcode %in% input$length_bar)
grouper = "Barcode_sequence"
ycol <- "X._One_mismatch_barcode"
if (input$projects == "All"){
ggplot(sub_data, aes_string(x = "Barcode_sequence", y=ycol, group=grouper)) + geom_boxplot() + theme(axis.text.x=element_text(angle=60, hjust=1, vjust=1), plot.title = element_text(lineheight=.8, face="bold",size = 30), legend.title = element_text(size=20, face="bold")) + ggtitle("% One mismatch per barcodesequence") + scale_y_continuous(name="% One mismatch barcode", breaks = seq(0,100,5), limits = c(0,100)) + coord_cartesian(xlim = ranges2$x, ylim = ranges2$y, expand = FALSE)
}else{
sub_data <- subset(sub_data, Project %in% input$projects)
ggplot(sub_data, aes_string(x = "Barcode_sequence", y=ycol, group=grouper)) + geom_boxplot() + theme(axis.text.x=element_text(angle=60, hjust=1, vjust=1), plot.title = element_text(lineheight=.8, face="bold",size = 30), legend.title = element_text(size=20, face="bold")) + ggtitle("% One mismatch per barcodesequence") + scale_y_continuous(name="% One mismatch barcode", breaks = seq(0,100,5), limits = c(0,100)) + coord_cartesian(xlim = ranges2$x, ylim = ranges2$y, expand = FALSE)
}
})
output$Sample_ATdrop <- renderPlot({
sub_data <- processed_table[(as.Date(processed_table$Date, "%d/%m/%Y") >= as.Date(input$sliderData1[1], "%d/%m/%Y")) & (as.Date(processed_table$Date, "%d/%m/%Y") <= as.Date(input$sliderData1[2], "%d/%m/%Y")), ]
sub_data <- subset(sub_data, Sequencer %in% input$sequencer)
grouper <- "Run"
ycol <- "AT_DROPOUT"
ggplot(sub_data, aes_string(x="Run", y = ycol, group=grouper)) + geom_point(shape=1, aes(colour=Sequencer)) + geom_smooth(aes(group="Sample"), method="lm") + ggtitle("Percentage AT dropout") + theme(axis.text.x=element_text(angle=60, hjust=1, vjust=1), plot.title = element_text(lineheight=.8, face="bold",size = 30), legend.title = element_text(size=20, face="bold"), legend.text = element_text(size=18)) + coord_cartesian(xlim = ranges3$x, ylim = ranges3$y, expand = FALSE) + scale_y_continuous(name="% AT Dropout", breaks = waiver(), limits = c(0,(max(processed_table$AT_DROPOUT)+5)))
})
output$Perc_20X <- renderPlot({
sub_data <- processed_table[(as.Date(processed_table$Date, "%d/%m/%Y") >= as.Date(input$sliderData1[1], "%d/%m/%Y")) & (as.Date(processed_table$Date, "%d/%m/%Y") <= as.Date(input$sliderData1[2], "%d/%m/%Y")), ]
sub_data <- subset(sub_data, Sequencer %in% input$sequencer)
grouper <- "Run"
ycol <- "PCT_TARGET_BASES_20X"
ggplot(sub_data, aes_string(x="Run", y = ycol, group=grouper)) + geom_point(shape=1, aes(colour=Sequencer)) + geom_hline(yintercept=0.95, colour="red", size=1, lty=2) + geom_smooth(aes(group="Sample"), method="lm") + ggtitle("Percentage Target Bases 20X") + labs(y = "% Target Bases 20X") + theme(axis.text.x=element_text(angle=60, hjust=1, vjust=1), plot.title = element_text(lineheight=.8, face="bold",size = 30), legend.title = element_text(size=20, face="bold"), legend.text = element_text(size=18)) + coord_cartesian(xlim = ranges3$x, ylim = ranges3$y, expand = FALSE) + scale_y_continuous(name="% Target Bases 20X", breaks = waiver(), limits = c((min(processed_table$PCT_TARGET_BASES_20X)-0.02),(max(processed_table$PCT_TARGET_BASES_20X)+0.01)))
})
observeEvent(input$plot1_dblclick, {
brush <- input$plot_brush
if (!is.null(brush)){
ranges1$x <- c(brush$xmin, brush$xmax)
ranges1$y <- c(brush$ymin, brush$ymax)
}else{
ranges1$x <- NULL
ranges1$y <- NULL
}
})
observeEvent(input$plot2_dblclick, {
brush <- input$plot_brush
if (!is.null(brush)){
ranges2$x <- c(brush$xmin, brush$xmax)
ranges2$y <- c(brush$ymin, brush$ymax)
}else{
ranges2$x <- NULL
ranges2$y <- NULL
}
})
observeEvent(input$plot3_dblclick, {
brush <- input$plot_brush
if (!is.null(brush)){
ranges3$x <- c(brush$xmin, brush$xmax)
ranges3$y <- c(brush$ymin, brush$ymax)
}else{
ranges3$x <- NULL
ranges3$y <- NULL
}
})
}
runApp('Documents/TAQC')
runApp('Documents/TAQC')
runApp('Documents/TAQC')
runApp('Documents/TAQC')
runApp('Documents/TAQC')
runApp('Documents/TAQC')
runApp('Documents/TAQC')
runApp('Documents/TAQC')
runApp('Documents/TAQC')
runApp('Documents/TAQC')
runApp('Documents/TAQC')
runApp('Documents/TAQC')
runApp('Documents/TAQC')
runApp('Documents/TAQC')
runApp('Documents/TAQC')
runApp('Documents/TAQC')
runApp('Documents/TAQC')
library(shiny)
library(ggplot2)
run_table = read.table("/home/cog/aluesink/Documents/TAQC/run_table.txt", header = TRUE)
sample_lane_table = read.table("/home/cog/aluesink/Documents/TAQC/sample_lane_table.txt", header = TRUE)
processed_table = read.table("/home/cog/aluesink/Documents/TAQC/processed_sample.txt", header = TRUE)
# run_table["Run"]==sample_lane_table["Run"]
run_table$RunQ30 <- NULL
for (a in unique(sample_lane_table[,"Run"])){
Q30 <- sample_lane_table[sample_lane_table[,"Run"]==a, "X._._Q30_bases"]
PFCluster <- sample_lane_table[sample_lane_table[,"Run"]==a, "PF_Clusters"]
Q30_PF <-Q30*PFCluster
Q30_avr <- sum(Q30_PF)/sum(PFCluster)
run_table$RunQ30[run_table[,"Run"]==a] <- Q30_avr
}
run_table$Date <- NULL
run_table$asDate <- NULL
for (i in 1:nrow(run_table)){
run_table$Date[i] <- unlist(strsplit(as.character(run_table$Run[i]),"_"))[1]
run_table$asDate[i] <- as.Date(run_table$Date[i], "%y%m%d", origin="00-00-00")
run_table$Date[i] <- format.Date(as.Date(run_table$Date[i], "%y%m%d"), "%d/%m/%Y")
}
processed_table$Date <- NULL
processed_table$asDate <- NULL
processed_table$Sequencer <- NA
hiseq <- c("hiseq_umc01")
nextseq1 <- c("nextseq_umc01")
nextseq2 <- c("nextseq_umc02")
for(i in 1:nrow(processed_table)){
processed_table$Date[i] <- unlist(strsplit(as.character(processed_table$Run[i]),"_"))[1]
processed_table$asDate[i] <- as.Date(processed_table$Date[i], "%y%m%d", origin="00-00-00")
processed_table$Date[i] <- format.Date(as.Date(processed_table$Date[i], "%y%m%d"), "%d/%m/%Y")
if(grepl("D00267",processed_table$Run[i]) == TRUE){
processed_table$Sequencer[i] <- hiseq
}
else if(grepl("NB501012", processed_table$Run[i]) == TRUE){
processed_table$Sequencer[i] <- nextseq1
}
else if(grepl("NB501039", processed_table$Run[i]) == TRUE){
processed_table$Sequencer[i] <- nextseq2
}
}
View(processed_table)
library(shiny)
library(ggplot2)
run_table = read.table("/home/cog/aluesink/Documents/TAQC/run_table.txt", header = TRUE)
sample_lane_table = read.table("/home/cog/aluesink/Documents/TAQC/sample_lane_table.txt", header = TRUE)
processed_table = read.table("/home/cog/aluesink/Documents/TAQC/processed_sample.txt", header = TRUE)
# run_table["Run"]==sample_lane_table["Run"]
run_table$RunQ30 <- NULL
for (a in unique(sample_lane_table[,"Run"])){
Q30 <- sample_lane_table[sample_lane_table[,"Run"]==a, "X._._Q30_bases"]
PFCluster <- sample_lane_table[sample_lane_table[,"Run"]==a, "PF_Clusters"]
Q30_PF <-Q30*PFCluster
Q30_avr <- sum(Q30_PF)/sum(PFCluster)
run_table$RunQ30[run_table[,"Run"]==a] <- Q30_avr
}
run_table$Date <- NULL
run_table$asDate <- NULL
for (i in 1:nrow(run_table)){
run_table$Date[i] <- unlist(strsplit(as.character(run_table$Run[i]),"_"))[1]
run_table$asDate[i] <- as.Date(run_table$Date[i], "%y%m%d", origin="00-00-00")
run_table$Date[i] <- format.Date(as.Date(run_table$Date[i], "%y%m%d"), "%d/%m/%Y")
}
processed_table$Date <- NULL
processed_table$asDate <- NULL
processed_table$Sequencer <- NA
hiseq <- c("hiseq_umc01")
nextseq1 <- c("nextseq_umc01")
nextseq2 <- c("nextseq_umc02")
for(i in 1:nrow(processed_table)){
processed_table$Date[i] <- unlist(strsplit(as.character(processed_table$Run[i]),"_"))[1]
processed_table$asDate[i] <- as.Date(processed_table$Date[i], "%y%m%d", origin="00-00-00")
processed_table$Date[i] <- format.Date(as.Date(processed_table$Date[i], "%y%m%d"), "%d/%m/%Y")
if(grepl("D00267",processed_table$Run[i]) == TRUE){
processed_table$Sequencer[i] <- hiseq
}
else if(grepl("NB501012", processed_table$Run[i]) == TRUE){
processed_table$Sequencer[i] <- nextseq1
}
else if(grepl("NB501039", processed_table$Run[i]) == TRUE){
processed_table$Sequencer[i] <- nextseq2
}
}
sample_lane_table$len_barcode <- NULL
for(i in unique(sample_lane_table[, "Barcode_sequence"])){
sample_lane_table$len_barcode[sample_lane_table[, "Barcode_sequence"]==i] <- nchar(i)
}
projects <- unique(sample_lane_table[,"Project"])
run_table <- run_table[order(run_table$asDate), ]
processed_table <- processed_table[order(processed_table$asDate), ]
View(sample_lane_table)
processed_table = read.table("/home/cog/aluesink/Documents/TAQC/processed_sample.txt", header = TRUE)
processed_table <- processed_table[processed_table$Run!="Test_100_exomes",]
View(processed_table)
run_table = read.table("/home/cog/aluesink/Documents/TAQC/run_table.txt", header = TRUE)
sample_lane_table = read.table("/home/cog/aluesink/Documents/TAQC/sample_lane_table.txt", header = TRUE)
processed_table = read.table("/home/cog/aluesink/Documents/TAQC/processed_sample.txt", header = TRUE)
processed_table <- processed_table[processed_table$Run!="Test_100_exomes",]
# run_table["Run"]==sample_lane_table["Run"]
run_table$RunQ30 <- NULL
for (a in unique(sample_lane_table[,"Run"])){
Q30 <- sample_lane_table[sample_lane_table[,"Run"]==a, "X._._Q30_bases"]
PFCluster <- sample_lane_table[sample_lane_table[,"Run"]==a, "PF_Clusters"]
Q30_PF <-Q30*PFCluster
Q30_avr <- sum(Q30_PF)/sum(PFCluster)
run_table$RunQ30[run_table[,"Run"]==a] <- Q30_avr
}
run_table$Date <- NULL
run_table$asDate <- NULL
for (i in 1:nrow(run_table)){
run_table$Date[i] <- unlist(strsplit(as.character(run_table$Run[i]),"_"))[1]
run_table$asDate[i] <- as.Date(run_table$Date[i], "%y%m%d", origin="00-00-00")
run_table$Date[i] <- format.Date(as.Date(run_table$Date[i], "%y%m%d"), "%d/%m/%Y")
}
processed_table$Date <- NULL
processed_table$asDate <- NULL
processed_table$Sequencer <- NA
hiseq <- c("hiseq_umc01")
nextseq1 <- c("nextseq_umc01")
nextseq2 <- c("nextseq_umc02")
for(i in 1:nrow(processed_table)){
processed_table$Date[i] <- unlist(strsplit(as.character(processed_table$Run[i]),"_"))[1]
processed_table$asDate[i] <- as.Date(processed_table$Date[i], "%y%m%d", origin="00-00-00")
processed_table$Date[i] <- format.Date(as.Date(processed_table$Date[i], "%y%m%d"), "%d/%m/%Y")
if(grepl("D00267",processed_table$Run[i]) == TRUE){
processed_table$Sequencer[i] <- hiseq
}
else if(grepl("NB501012", processed_table$Run[i]) == TRUE){
processed_table$Sequencer[i] <- nextseq1
}
else if(grepl("NB501039", processed_table$Run[i]) == TRUE){
processed_table$Sequencer[i] <- nextseq2
}
}
sample_lane_table$len_barcode <- NULL
for(i in unique(sample_lane_table[, "Barcode_sequence"])){
sample_lane_table$len_barcode[sample_lane_table[, "Barcode_sequence"]==i] <- nchar(i)
}
projects <- unique(sample_lane_table[,"Project"])
run_table <- run_table[order(run_table$asDate), ]
processed_table <- processed_table[order(processed_table$asDate), ]
View(processed_table)
runApp('Documents/TAQC')
runApp('Documents/TAQC')
runApp('Documents/TAQC')
runApp('Documents/TAQC')
runApp('Documents/TAQC')
